
package br.com.silbeckpro.hotelcontinentaljpa.gui;

import br.com.silbeckpro.hotelcontinentaljpa.Hospede;
import br.com.silbeckpro.hotelcontinentaljpa.persistencia.HospedeDAO;
import java.awt.Font;
import java.math.BigInteger;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


public class Cadastrado extends javax.swing.JFrame {
    private TelaCriarReserva telaCriarReserva;
    private TelaReservas telaReservas;
    
    
    public Cadastrado(TelaReservas telaReservas, TelaCriarReserva telaCriarReserva) {
        this.telaCriarReserva = telaCriarReserva;
        this.telaReservas = telaReservas;
        
        initComponents();
        
        //Código para definir o ícone
        ImageIcon logo = new ImageIcon(getClass().getResource("/Icons/Logo.png"));
        this.setIconImage(logo.getImage());
        
        carregarListaHospede();
    }
    
    //Método para carregar a lista de hóspede
    private void carregarListaHospede() {
        HospedeDAO hd = new HospedeDAO();
        List<Hospede> hospedes = hd.listar();
        
        if (!hospedes.isEmpty()) {
            preencherHospede(hospedes);
        } else {
            JOptionPane.showMessageDialog(this, "Nenhum hóspede encontrado!", "HÓSPEDE NÃO ENCONTRADO", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    //Método para preencher a tabela de hóspede
    public void preencherHospede(List<Hospede> hospedes) {
        String colunas[] = {"Id", "Cpf", "Nome", "Cep", "Endereço", "Cidade", "Telefone"};
        String dados[][] = new String[hospedes.size()][colunas.length];
        
        int i = 0;
        for (Hospede h: hospedes) {
            dados[i] = new String[]{
                String.valueOf(h.getId()),
                h.getCpf(),
                h.getNome(),
                h.getCep(),
                h.getEndereco(),
                h.getCidade(),
                h.getTelefone()
            };
            i++;
        }
        DefaultTableModel model = new DefaultTableModel(dados, colunas);
        tblHospede.setModel(model);
        
        //Configura a fonte do cabeçalho
        tblHospede.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        
        //Ajusta a largura das colunas
        tblHospede.getColumnModel().getColumn(0).setPreferredWidth(42);
        tblHospede.getColumnModel().getColumn(1).setPreferredWidth(100);
        tblHospede.getColumnModel().getColumn(2).setPreferredWidth(153);
        tblHospede.getColumnModel().getColumn(3).setPreferredWidth(70);
        tblHospede.getColumnModel().getColumn(4).setPreferredWidth(150);
        tblHospede.getColumnModel().getColumn(5).setPreferredWidth(100);
        tblHospede.getColumnModel().getColumn(6).setPreferredWidth(105);
    }
    
    //Método para pegar o ID do hóspede
    public long hospedeSelecionado() {
        int linhaSelecionada = tblHospede.getSelectedRow();
        if (linhaSelecionada != -1) {
            String hospedeS = (String) tblHospede.getValueAt(linhaSelecionada, 0);
            return Long.parseLong(hospedeS);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Atenção: nenhum hóspede foi selecionado!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
            return -1;
        }
    }
    
    public JTable getTblHospede() {
        return tblHospede;
    }
    
    //Método para verificar seé número
    public boolean isNumeric(String texto) {
        try{
            if (texto.length() <= 9 ) {
               Integer.parseInt(texto); 
               return true;
            } else if (texto.length() <= 19) {
                Long.parseLong(texto);
                return true;
            } else {
                new BigInteger(texto);
                return true;
            }
        } catch (NumberFormatException e) {
            return false;
        }
    }
    
    //Método para formtatar o cpf
    public String formatarCpf (String cpf) {
        if (cpf != null && cpf.length() == 11) {
            return cpf.substring(0, 3) + "." +
                   cpf.substring(3, 6) + "." +
                   cpf.substring(6, 9) + "-" +
                   cpf.substring(9, 11);
        } else {
            JOptionPane.showMessageDialog(rootPane, "O CPF informado não é válido, verifique!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
            return null;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblHospede = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnSelecionarHospede = new javax.swing.JButton();
        btnVoltarHospedeCadastro = new javax.swing.JButton();
        btnAtualizarHospede = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ftfProcurarHospede = new javax.swing.JTextField();
        btnProcurarHospede = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("BUSCA DE HÓSPEDE");

        jScrollPane1.setBackground(new java.awt.Color(102, 102, 102));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tblHospede.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblHospede.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "CPF", "Nome", "CEP", "Endereço", "Cidade", "Telefone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblHospede.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(tblHospede);

        jLabel1.setBackground(new java.awt.Color(1, 22, 45));
        jLabel1.setFont(new java.awt.Font("Baskerville Old Face", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(1, 22, 45));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hóspedes");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnSelecionarHospede.setBackground(new java.awt.Color(204, 204, 204));
        btnSelecionarHospede.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        btnSelecionarHospede.setForeground(new java.awt.Color(1, 22, 45));
        btnSelecionarHospede.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Selecionar.png"))); // NOI18N
        btnSelecionarHospede.setText("Selecionar");
        btnSelecionarHospede.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSelecionarHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarHospedeActionPerformed(evt);
            }
        });

        btnVoltarHospedeCadastro.setBackground(new java.awt.Color(204, 204, 204));
        btnVoltarHospedeCadastro.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        btnVoltarHospedeCadastro.setForeground(new java.awt.Color(1, 22, 45));
        btnVoltarHospedeCadastro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Voltar.png"))); // NOI18N
        btnVoltarHospedeCadastro.setText("Voltar");
        btnVoltarHospedeCadastro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnVoltarHospedeCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarHospedeCadastroActionPerformed(evt);
            }
        });

        btnAtualizarHospede.setBackground(new java.awt.Color(204, 204, 204));
        btnAtualizarHospede.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        btnAtualizarHospede.setForeground(new java.awt.Color(1, 22, 45));
        btnAtualizarHospede.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Atualizar.png"))); // NOI18N
        btnAtualizarHospede.setText("Atualizar");
        btnAtualizarHospede.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAtualizarHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarHospedeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(btnVoltarHospedeCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(btnAtualizarHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(btnSelecionarHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSelecionarHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVoltarHospedeCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAtualizarHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(1, 22, 45));
        jLabel2.setText("Procurar Hóspede:");

        ftfProcurarHospede.setToolTipText("Digite CPF ou nome do hóspede para procurar");

        btnProcurarHospede.setBackground(new java.awt.Color(255, 255, 204));
        btnProcurarHospede.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        btnProcurarHospede.setForeground(new java.awt.Color(1, 22, 45));
        btnProcurarHospede.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Buscar.png"))); // NOI18N
        btnProcurarHospede.setText("Procurar");
        btnProcurarHospede.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnProcurarHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcurarHospedeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ftfProcurarHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(btnProcurarHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfProcurarHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProcurarHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(293, 293, 293)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarHospedeCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarHospedeCadastroActionPerformed
        dispose();
    }//GEN-LAST:event_btnVoltarHospedeCadastroActionPerformed

    private void btnSelecionarHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarHospedeActionPerformed
        long hospedeId = hospedeSelecionado();
        
        if (hospedeId != - 1) {
            HospedeDAO hospedeDAO = new HospedeDAO();
            Hospede hospede = hospedeDAO.buscarporId(hospedeId);
            
            if (hospede != null && telaCriarReserva != null) {
                telaCriarReserva.setNomeHospede(hospede.getNome());
                telaCriarReserva.setHospedeId(hospedeId);
                telaCriarReserva.setVisible(true);
                dispose();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Hóspede não encontrado!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
            }
        }        
    }//GEN-LAST:event_btnSelecionarHospedeActionPerformed

    private void btnProcurarHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcurarHospedeActionPerformed
        if (ftfProcurarHospede.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Atenção: informe um hóspede para pesquisar!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            String texto = ftfProcurarHospede.getText();
            
            HospedeDAO hospedeDAO = new HospedeDAO();
            List<Hospede> hospede;
            
            if (isNumeric(texto)) { 
                String cpfFormatado = formatarCpf(texto);
                
                if (cpfFormatado == null) {
                    carregarListaHospede();
                    return;
                }
                hospede = hospedeDAO.pesquisarCpf(cpfFormatado);
                
                if (hospede.isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "Nenhum hóspede encontrado com esse CPF!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                    carregarListaHospede();
                } else {
                    preencherHospede(hospede);
                }
            } else {
                hospede = hospedeDAO.pesquisarNome(texto);
                
                if (hospede.isEmpty()) {
                    JOptionPane.showMessageDialog(rootPane, "Nenhum hóspede encontrado com esse nome!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
                } else {
                    preencherHospede(hospede);
                }
            }
        }
    }//GEN-LAST:event_btnProcurarHospedeActionPerformed

    private void btnAtualizarHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarHospedeActionPerformed
        carregarListaHospede();
    }//GEN-LAST:event_btnAtualizarHospedeActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cadastrado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cadastrado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cadastrado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cadastrado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Cadastrado().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizarHospede;
    private javax.swing.JButton btnProcurarHospede;
    private javax.swing.JButton btnSelecionarHospede;
    private javax.swing.JButton btnVoltarHospedeCadastro;
    private javax.swing.JTextField ftfProcurarHospede;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHospede;
    // End of variables declaration//GEN-END:variables
}
